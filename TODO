I want JsonString output objects to take in a JsonStringWriter for outputting text. Two implementations: one with pretty formatting and one without.
JsonStringWriter should write to a TextWriter to allow streaming scenarios.
Current issue is that structures are never 'closed', so the full string can't be built until GetResult is called.
Investigate not returning Outputs to Reader and having Writer maintain a stack instead.


Make PartiallyTypedJsonStringBuilder that only adds type information when necessary.
 - Should automatically add type info when source is interface or abstract
 - Add attribute that forces type information.
Allow override of type resolution.
Test duplicate value types - will probably incorrectly create references at the moment.
Test nullable value type properties.
Turn all singleton properties into public readonly fields.
Don't require output to be an object. Get rid of AsStructure if possible.
Simple struct serialization with ToString & Parse.

New Serialization Rules:
 - Defaults
   - Serialize public properties with getters
   - Deserialize public properties with setters or where type can deserialize into existing object
 - Serializable attribute with flags for
   - Serialize properties
   - Serialize fields
   - Serialize publics
   - Serialize privates
   - Serialize when can't be deserialized
 - Other attributes:
   - Deserialization constructor function - takes in dictionary of property values
   - Deserialization constructor - parameters automatically resolved
   - Serialize property/field - enum for serialization/deserialization only
   - Do not serialize property/field
   - Custom property/field serialization/deserialization
   - Custom property name - separate serialize/deserialize (and allow multiple names to deserialize from)?